name: Build

on:
  pull_request:
    branches: [main]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest4
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
    outputs:
      version: ${{ steps.version.outputs.version }}
      version-major: ${{ steps.version.outputs.version-major-only }}
      version-minor: ${{ format('{0}.{1}', steps.version.outputs.version-major-only, steps.version.outputs.version-minor-only) }}
      version-patch: ${{ format('{0}.{1}.{2}', steps.version.outputs.version-major-only, steps.version.outputs.version-minor-only, steps.version.outputs.version-patch-only) }}
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Generate next version
        id: version
        uses: conventional-actions/next-version@v1
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          always-auth: true
          registry-url: https://registry.npmjs.com/
          scope: ketch-sdk
          node-version: 20
          cache: "npm"
      - name: Setup Node version
        uses: conventional-actions/write-version@v1
        with:
          output_path: package.json
          version: ${{ format('{0}.{1}.{2}', steps.version.outputs.version-major-only, steps.version.outputs.version-minor-only, steps.version.outputs.version-patch-only) }}
      - name: Install dependencies
        run: npm ci
      - name: Run all targets
        run: npm run all
      - name: Publish
        if: github.ref == format('refs/heads/{0}', github.event.repository.default_branch)
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
